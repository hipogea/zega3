<?php // esta clase va en: 'protected/components/MiClaseCrugeMailer.php' (no dentro de cruge!!)class MiClaseCrugeMailer extends CrugeMailer {   public function notificarStockMercancia($usuario,$asunto) {     // IMPORTANTE: NO implementes aqui el metodo de envio de email      // por ejemplo mail(..) o phpmailer(..bla..) eso es     // responsabilidad del metodo sendEmail que haces mas abajo     // aqui solo dedicate a preparar el correo !!     $this->sendEmail(       $usuario->email,$asunto,        $this->render('vw_general',array('data'=>$usuario))     );  }    public function prueba(){        $this->sendEmail('hipogea@hotmail.com','hola mano',$this->render('vw_saludo'));    }    /*  obeionte una lista de correos de un contacto, hay que especificar el  documento */    public function getListMailContacto($idcontacto,$codocu) {        $modelocontacto=Contactos::model()->findByPk($idcontacto);        $registroshijos=$modelocontacto->contactos_mail;        $listacorreos=$modelocontacto->c_mail.",";        foreach($registroshijos as $fila ){            $listacorreos.=$fila->mail.",";        }       // $listacorreos=substr($listacorreos,1).""; //quitar el primer slash        $listacorreos=str_replace(",,",",",$listacorreos);//quitamos los slashes        if(substr($listacorreos,strlen($listacorreos)-1,1)==",")        $listacorreos=substr($listacorreos,0,strlen($listacorreos)-1); //quitar el tultimo slash si lo tuviera        return $listacorreos;    }  public function mail_novedadradio($listadestino,$asunto,$contenido,$modelito,$campos) {         $this->sendEmail(       $listadestino,$asunto,        $this->render('vw_general',array('asunto'=>$asunto,'contenido'=>$contenido,'campos'=>$campos,'modelito'=>$modelito))     );  }    public function mail_general($listadestino,$asunto,$contenido,$modelito,$campos) {         $this->sendEmail(       $listadestino,$asunto,        $this->render('vw_general',array('asunto'=>$asunto,'contenido'=>$contenido,'campos'=>$campos,'modelito'=>$modelito))     );  }public function mail_con_archivo ($destinatario,$dequien,$asunto,$vacr){                   $to = $destinatario;                   $from = "Nombre que queremos que se vea <remitente@dominioremitente.com>";                   $subject = 'Asunto del mensaje';                   $semi_rand = md5(time());                    $mime_boundary = "==TecniBoundary_x{$semi_rand}x";                    $headers = "From: $from";                    $headers .= "\nMIME-Version: 1.0\n" . "Content-Type: multipart/mixed;\n" . " boundary=\"{$mime_boundary}\"";                    $message = "Informacion del cedente";                    $message = "--{$mime_boundary}\n" . "Content-Type: text/plain; charset=\"utf-8\"\r\n" .                      "Content-Transfer-Encoding: BASE64n\n\n" . $message . "\n\n";                    $file=Yii::app()->params['rutaraiz'].'recurso/assets/'.$vacr.'.pdf';                      $fp = fopen($file, "rb");                      $data = fread($fp, filesize($file));                      fclose($fp);                        $data = chunk_split(base64_encode($data));                        $message .= "--{$mime_boundary}\r\n";                            $message .= "Content-Type: application/xlsx; name=\"" . basename($file). "\"\r\n" . "Content-Transfer-Encoding: base64\r\n" . $data . "\r\n" . "Content-Disposition: attachment\r\n";                          $message .= "--{$mime_boundary}--";                                 // mail($to, $subject, $message, $headers);                                 mail($to, $subject,$message,$headers);                      }function probar($fileruta){    Yii::import('application.extensions.phpmailer.JPhpMailer');    $mail = new JPhpMailer;    $mail->SMTPDebug  = 2;    $mail->IsSMTP();    $mail->Host = 'mail.neotegnia.com';    $mail->SMTPAuth = true;    $mail->Username = 'jramirez@neotegnia.com';    $mail->Password = 'toxoplasma1';    $mail->SetFrom('jramirez@neotegnia.com', 'Jkuoina ramires');    $mail->Subject = 'PHPMailer Test Subject via smtp, basic with authentication';    $mail->AltBody = 'To view the message, please use an HTML compatible email viewer!';    $mail->MsgHTML('<h1>JUST A TEST!</h1>');    $mail->AddAddress('hipogea@hotmail.com', 'John Doe');    $mail->AddAttachment($fileruta, $name = '', $encoding = 'base64', $type = 'application/octet-stream');    $mail->Send();    /*$mail->IsSMTP();//permite modo debug para ver mensajes de las cosas que van ocurriendo    $mail->SMTPDebug  = 2;//Debo de hacer autenticación SMTP    $mail->SMTPAuth = true;     $mail->SMTPSecure  = "ssl";//indico el servidor de Gmail para SMTP    $mail->Host= "smtp.gmail.com";//indico el puerto que usa Gmail    $mail->Port = 465;//indico un usuario / clave de un usuario de gmail    $mail->Username = "neotegnia@gmail.com";    $mail->Password = "toxoplasma1";    $mail->SetFrom('neotegnia@gmail.com', 'Julian ramirez');    $mail->AddReplyTo("neotegnia@gmail.com","Julian ramirez");    $mail->Subject = "Envío de email usando SMTP de Gmail";    $mail->MsgHTML("Hola que tal, esto es el cuerpo del mensaje!");//indico destinatario    $address = "hipogea@hotmail.com";    $mail->AddAddress($address, "Nombre completo");    if(! $mail->Send()) {        echo "Error al enviar: " .  $mail->ErrorInfo;    } else {        echo "Mensaje enviado!";    } */}function mail_attachment( $mailto, $from_mail, $from_name, $replyto, $subject, $message,$filename) {    Yii::import('application.extensions.phpmailer.JPhpMailer');    $mail = new JPhpMailer;    $mail->SMTPDebug  = 2;    $mail->IsSMTP();    $mail->Host = 'mail.neotegnia.com';    $mail->SMTPAuth = true;    $mail->Username = 'jramirez@neotegnia.com';    $mail->Password = 'toxoplasma1';    $mail->SetFrom($from_mail, $from_name);    $mail->Subject = $subject;    $mail->AltBody = 'To view the message, please use an HTML compatible email viewer!';    $mail->MsgHTML($message.'   al final  '.$from_name);    foreach (explode(",",$mailto) as $clave=>$valor){        $mail->AddAddress($valor);    }    $mail->AddAttachment($filename, $name = '', $encoding = 'base64', $type = 'application/octet-stream');    if(! $mail->Send()) {        return "Error al enviar: " .  $mail->ErrorInfo;    } else {        return  null;    }/*    $file =$filename;    $file_size = filesize($file);    $handle = fopen($file, "rb");    $content = fread($handle, $file_size);    fclose($handle);   $content = chunk_split(base64_encode($content));    $uid = md5(uniqid(time()));    $name = basename($file);    $header = "From: ".$from_name." <".$from_mail.">\r\n";    $header .= "Reply-To: ".$replyto."\r\n";    $header .= "MIME-Version: 1.0\r\n";    $header .= "Content-Type: multipart/mixed; boundary=\"".$uid."\"\r\n\r\n";    $header .= "This is a multi-part message in MIME format.\r\n";    $header .= "--".$uid."\r\n";    $header .= "Content-type:text/plain; charset=utf-8\r\n";    $header .= "Content-Transfer-Encoding: base64\r\n\r\n";    $header .= $message."\r\n\r\n";    $header .= "--".$uid."\r\n";    $header .= "Content-Type: application/octet-stream; name=\"".$name."\"\r\n"; // use different content types here    $header .= "Content-Transfer-Encoding: base64\r\n";    $header .= "Content-Disposition: attachment; filename=\"".$name."\"\r\n\r\n";    $header .= $content."\r\n\r\n";    $header .= "--".$uid."--";  if (mail($mailto, $subject, "", $header)) {   // if (mail($mailto,'hola',$name,'')) {        return $mailto;   } else {        return null;   }   // echo $content;*/}function mail_prueba( $to, $from, $from_name, $replyto, $subject, $message,$vacr) {  $filename=Yii::app()->params['rutaraiz'].'recurso/assets/'.$vacr.'.pdf';    $file =$filename;    $file_size = filesize($file);    $handle = fopen($file, "r");    $content = fread($handle, $file_size);    fclose($handle);  // $content = chunk_split(base64_encode($content));   // $uid = md5(uniqid(time()));    $name = basename($file);   $separator = md5(time());// carriage return type (we use a PHP end of line constant)$eol = PHP_EOL;// attachment name//$filename = "document.pdf";//$pdfdoc is PDF generated by FPDF$attachment = chunk_split(base64_encode($content));// main header$headers  = "From: ".$from.$eol;$headers .= "MIME-Version: 1.0".$eol; $headers .= "Content-Type: multipart/mixed; boundary=\"".$separator."\"".$eol.$eol; $headers .= "Content-Transfer-Encoding: 7bit".$eol;$headers .= "This is a MIME encoded message.".$eol.$eol;// message$headers .= "--".$separator.$eol;$headers .= "Content-Type: text/html; charset=\"iso-8859-1\"".$eol;$headers .= "Content-Transfer-Encoding: 8bit".$eol.$eol;$headers .= $message.$eol.$eol;// attachment$headers .= "--".$separator.$eol;$headers .= "Content-Type: application/octet-stream; name=\"".$filename."\"".$eol; $headers .= "Content-Transfer-Encoding: base64".$eol;$headers .= "Content-Disposition: attachment".$eol.$eol;$headers .= $attachment.$eol.$eol;$headers .= "--".$separator."--";// send messageif (mail($to, $subject, "", $headers)) {    echo "mail send ... OK";} else {    echo "mail send ... ERROR";}     // echo $content;}  public function sendEmail($to,$subject,$body){     // usa esto para que el correo se env�e por la via estandar mail()     // si quieres usar otro m�todo deber�s comentar esta linea e implementar      // tu propio mecanismo.     parent::sendEmail($to,$subject,$body);  }}?>